/*
* Underscore.string
* (c) 2010 Esa-Matti Suuronen <esa-matti aet suuronen dot org>
* Underscore.string is freely distributable under the terms of the MIT license.
* Documentation: https://github.com/epeli/underscore.string
* Some code is borrowed from MooTools and Alexandru Marasteanu.
* Version '3.3.4'
* @preserve
*/

'use strict';

function s(value) {
  /* jshint validthis: true */
  if (!(this instanceof s)) return new s(value);
  this._wrapped = value;
}

s.VERSION = '3.3.4';

s.isBlank          = require('underscore.string/isBlank');
s.stripTags        = require('underscore.string/stripTags');
s.capitalize       = require('underscore.string/capitalize');
s.decapitalize     = require('underscore.string/decapitalize');
s.chop             = require('underscore.string/chop');
s.trim             = require('underscore.string/trim');
s.clean            = require('underscore.string/clean');
s.cleanDiacritics  = require('underscore.string/cleanDiacritics');
s.count            = require('underscore.string/count');
s.chars            = require('underscore.string/chars');
s.swapCase         = require('underscore.string/swapCase');
s.escapeHTML       = require('underscore.string/escapeHTML');
s.unescapeHTML     = require('underscore.string/unescapeHTML');
s.splice           = require('underscore.string/splice');
s.insert           = require('underscore.string/insert');
s.replaceAll       = require('underscore.string/replaceAll');
s.include          = require('underscore.string/include');
s.join             = require('underscore.string/join');
s.lines            = require('underscore.string/lines');
s.dedent           = require('underscore.string/dedent');
s.reverse          = require('underscore.string/reverse');
s.startsWith       = require('underscore.string/startsWith');
s.endsWith         = require('underscore.string/endsWith');
s.pred             = require('underscore.string/pred');
s.succ             = require('underscore.string/succ');
s.titleize         = require('underscore.string/titleize');
s.camelize         = require('underscore.string/camelize');
s.underscored      = require('underscore.string/underscored');
s.dasherize        = require('underscore.string/dasherize');
s.classify         = require('underscore.string/classify');
s.humanize         = require('underscore.string/humanize');
s.ltrim            = require('underscore.string/ltrim');
s.rtrim            = require('underscore.string/rtrim');
s.truncate         = require('underscore.string/truncate');
s.prune            = require('underscore.string/prune');
s.words            = require('underscore.string/words');
s.pad              = require('underscore.string/pad');
s.lpad             = require('underscore.string/lpad');
s.rpad             = require('underscore.string/rpad');
s.lrpad            = require('underscore.string/lrpad');
s.sprintf          = require('underscore.string/sprintf');
s.vsprintf         = require('underscore.string/vsprintf');
s.toNumber         = require('underscore.string/toNumber');
s.numberFormat     = require('underscore.string/numberFormat');
s.strRight         = require('underscore.string/strRight');
s.strRightBack     = require('underscore.string/strRightBack');
s.strLeft          = require('underscore.string/strLeft');
s.strLeftBack      = require('underscore.string/strLeftBack');
s.toSentence       = require('underscore.string/toSentence');
s.toSentenceSerial = require('underscore.string/toSentenceSerial');
s.slugify          = require('underscore.string/slugify');
s.surround         = require('underscore.string/surround');
s.quote            = require('underscore.string/quote');
s.unquote          = require('underscore.string/unquote');
s.repeat           = require('underscore.string/repeat');
s.naturalCmp       = require('underscore.string/naturalCmp');
s.levenshtein      = require('underscore.string/levenshtein');
s.toBoolean        = require('underscore.string/toBoolean');
s.exports          = require('underscore.string/exports');
s.escapeRegExp     = require('underscore.string/helper/escapeRegExp');
s.wrap             = require('underscore.string/wrap');
s.map              = require('underscore.string/map');

// Aliases
s.strip     = s.trim;
s.lstrip    = s.ltrim;
s.rstrip    = s.rtrim;
s.center    = s.lrpad;
s.rjust     = s.lpad;
s.ljust     = s.rpad;
s.contains  = s.include;
s.q         = s.quote;
s.toBool    = s.toBoolean;
s.camelcase = s.camelize;
s.mapChars  = s.map;


// Implement chaining
s.prototype = {
  value: function value() {
    return this._wrapped;
  }
};

function fn2method(key, fn) {
  if (typeof fn !== 'function') return;
  s.prototype[key] = function() {
    var args = [this._wrapped].concat(Array.prototype.slice.call(arguments));
    var res = fn.apply(null, args);
    // if the result is non-string stop the chain and return the value
    return typeof res === 'string' ? new s(res) : res;
  };
}

// Copy functions to instance methods for chaining
for (var key in s) fn2method(key, s[key]);

fn2method('tap', function tap(string, fn) {
  return fn(string);
});

function prototype2method(methodName) {
  fn2method(methodName, function(context) {
    var args = Array.prototype.slice.call(arguments, 1);
    return String.prototype[methodName].apply(context, args);
  });
}

var prototypeMethods = [
  'toUpperCase',
  'toLowerCase',
  'split',
  'replace',
  'slice',
  'substring',
  'substr',
  'concat'
];

for (var method in prototypeMethods) prototype2method(prototypeMethods[method]);


module.exports = s;
